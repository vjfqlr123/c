#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <unistd.h>

#define BUF_SIZE 1024

int main(int argc, zhar *argv[])
{
	int sock;
	char message[BUF_SIZE];
	struct sockaddr_in ser_adr;
	int str_len, re_len, re_cnt;
	
	sock = sockect(PF_INET, SOCK_STREAM, 0);
	
	memset(&ser_adr, 0, sizeof(ser_adr));
	ser_adr.sin_family = AF_INET;
	ser_adr.sin_addr.s_addr = inet_addr(argv[1]);
	ser_adr.sin_port = htons(atoi(argv[2]));
	
	if(connect(sock, (struct sockaddr*)&ser_adr, sizeof(ser_adr))==-1)
		error_handling("connect error");
	else
		printf("connected.....");
	
	
	while(1){
		fputs("Input message(Q to quit) :", stdout);
		fgets(message, BUF_SIZE, stdin);
		
		if(!strcmp(message, "Q\n") || !strcmp(message, "q\n"))
			break;
			
		str_len = write(sock, message, sizeof(message));
	
		re_len = 0;
		while(re_len != str_len){
			re_cnt = read(sock, &message[re_len], BUF_SIZE-1);
			re_len += re_cnt;
		}
		message[re_len]=0;
		close(sock);
	}
	
	
	return 0;
}
